@page "/EditableDatabase"
@using static BlazorApp1.AppDbContext
@using Microsoft.EntityFrameworkCore
@using BlazorApp1.Components.Pages.Classes



<PageTitle>Database</PageTitle>
<div id="heading-container">
    <!---<label for="locations">Choose a Location:</label>
    <select @bind="SelectedLocation" name="locations" id="locations">
        <option value="north-east">North-East</option>
        <option value="north-west">North-West</option>
        <option value="south-east">South-East</option>
        <option value="south-west">South-West</option>
        <option value="china">China</option>
    </select>-->
</div>
<h1>Database</h1>
<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>Quantity</th>
            <th>Cost</th>
            <th>VendorID</th>
            <th>LocationID</th>
        </tr>
    </thead>
    <tbody>
        <h3>South-West</h3>
        @foreach (Part part in DbContext.Parts) //how to filter based on selected location
        {

            //if (part.LocationID == "1")
            //  {
            <tr>
                <td>@part.Id</td>

                <td><input type="text" @bind="part.Quantity" /></td>
                <td><input type="text" @bind="part.Cost" /></td>
                <td><input type="text" @bind="part.VendorID" /></td>
                <td><input type="text" @bind="part.LocationID" /></td>
            </tr>
            //}
        }
        <h3>North-West</h3>
        @foreach (Part part in DbContext.Parts) //how to filter based on selected location
        {
            if (part.LocationID == "2")
            {


                //int locationId = LocationNameToID(SelectedLocation);
                //if (part.LocationID == locationId)
                <tr>
                    <td>@part.Id</td>

                    <td><input type="text" @bind="part.Quantity" /></td>
                    <td><input type="text" @bind="part.Cost" /></td>
                    <td><input type="text" @bind="part.VendorID" /></td>
                    <td><input type="text" @bind="part.LocationID" /></td>
                </tr>
            }
        }
        <h3>Nort-East</h3>
        @foreach (Part part in DbContext.Parts) //how to filter based on selected location
        {
            if (part.LocationID == "3")
            {


                //int locationId = LocationNameToID(SelectedLocation);
                //if (part.LocationID == locationId)
                <tr>
                    <td>@part.Id</td>

                    <td><input type="text" @bind="part.Quantity" /></td>
                    <td><input type="text" @bind="part.Cost" /></td>
                    <td><input type="text" @bind="part.VendorID" /></td>
                    <td><input type="text" @bind="part.LocationID" /></td>
                </tr>
            }
        }
        <h3>South-East</h3>

        @foreach (Part part in DbContext.Parts) //how to filter based on selected location
        {
            if (part.LocationID == "4")
            {


                //int locationId = LocationNameToID(SelectedLocation);
                //if (part.LocationID == locationId)
                <tr>
                    <td>@part.Id</td>

                    <td><input type="text" @bind="part.Quantity" /></td>
                    <td><input type="text" @bind="part.Cost" /></td>
                    <td><input type="text" @bind="part.VendorID" /></td>
                    <td><input type="text" @bind="part.LocationID" /></td>
                </tr>
            }
        }
        <h3>Taiwan</h3>

        @foreach (Part part in DbContext.Parts) //how to filter based on selected location
        {
            if (part.LocationID == "5")
            {


                //int locationId = LocationNameToID(SelectedLocation);
                //if (part.LocationID == locationId)
                <tr>
                    <td>@part.Id</td>

                    <td><input type="text" @bind="part.Quantity" /></td>
                    <td><input type="text" @bind="part.Cost" /></td>
                    <td><input type="text" @bind="part.VendorID" /></td>
                    <td><input type="text" @bind="part.LocationID" /></td>
                </tr>
            }
        }
        <tr>
            <td>@newPart.Id</td>

            <td><input type="text" @bind="newPart.Quantity" /></td>
            <td><input type="text" @bind="newPart.Cost" /></td>
            <td><input type="text" @bind="newPart.VendorID" /></td>
            <td><input type="text" @bind="newPart.LocationID" /></td>
            <!--make locationID automatically the id of the current location-->
        </tr>
    </tbody>
</table>
<button @onclick="SaveChanges">Save Changes</button>
@code {
    private string SelectedLocation { get; set; }
    Part newPart = new();

    private async Task SaveChanges()
    {
        newPart.Id = DbContext.Parts.Max(p => p.Id) + 1;
        DbContext.Parts.Add(newPart);
        await DbContext.SaveChangesAsync();
        newPart = new Part();
    }

    //method to convert location name to its corresponding id
    /*private int LocationNameToID(string locationName)
        {
        var location = DbContext.Locations.FirstOrDefault
            (i => i.LocationName.Equals(locationName, StringComparison.OrdinalIgnoreCase));

        return location.LocationID;


    }*/


}
